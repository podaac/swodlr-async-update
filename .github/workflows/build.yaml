name: Build 'n Deploy

on: 
  push:
    branches:
      - '*'
    tags-ignore:
      - '*'
    paths-ignore:
      - 'package.json'
      - 'package-lock.json'
      - 'bumpver.toml'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      venue:
        type: choice
        description: Venue to deploy to
        options:
          - SIT
          - UAT

permissions:
  contents: read
  packages: read

jobs:
  lint_n_test:
    name: lint and test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
      - uses: hashicorp/setup-terraform@v2.0.3
      - name: Install package
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Lint
        run: npm run lint
      - name: Test
        run: npm test
      - name: Validate Terraform
        run: terraform validate -no-color

  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      deploy_env: ${{ steps.npm-build.outputs.deploy_env }}
    needs: lint_n_test
    steps:
      #   -- Setup --
      - uses: getsentry/action-github-app-token@v2
        name: my-app-install token
        id: podaac-cicd
        with:
          app_id: ${{ secrets.CICD_APP_ID }}
          private_key: ${{ secrets.CICD_APP_PRIVATE_KEY }}
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
          token: ${{ steps.podaac-cicd.outputs.token }}
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://npm.pkg.github.com'
      - uses: hashicorp/setup-terraform@v2.0.3
      - name: Setup git user
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
      - name: No version bump
        # If triggered by workflow dispatch, no version bump
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "TARGET_ENV=${{ github.event.inputs.venue }}" >> $GITHUB_ENV
      #   -- Version Bumping --
      - name: Bump alpha version
        if: github.ref == 'refs/heads/develop'
        run: |
          TAG=$(bumpver show -e | awk -F= '$1 == "TAG" {print $2};')
          if [ $TAG == 'final' ]; then
            # Bump patch version first then append tag
            bumpver update --patch --tag alpha --tag-num
          else
            bumpver update --tag alpha --tag-num
          fi
          echo "TARGET_ENV=SIT" >> $GITHUB_ENV
      - name: Bump rc version
        if: startsWith(github.ref, 'refs/heads/release/')
        run: |
          bumpver update --patch --tag rc --tag-num
          echo "TARGET_ENV=UAT" >> $GITHUB_ENV
      - name: Release version
        if: github.ref == 'refs/heads/main'
        run: bumpver update --patch --tag final

      #   -- Build --
      - name: Build lambda package
        id: npm-build
        run: |
          npm run build
          echo "deploy_env=${{ env.TARGET_ENV }}" >> $GITHUB_OUTPUT
          echo "Setting deploy env to ${{ env.TARGET_ENV }}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload packaged zip
        uses: actions/upload-artifact@v3.1.0
        with:
          name: dist
          path: dist/*.zip

      #   -- Terraform Deployment --
      - name: Deploy to SIT
        if: github.ref == 'refs/heads/develop'
        working-directory: terraform/
        env:
          AWS_ACCESS_KEY_ID:       ${{ secrets.AWS_ACCESS_KEY_ID_SERVICES_SIT }}
          AWS_SECRET_ACCESS_KEY:   ${{ secrets.AWS_SECRET_ACCESS_KEY_SERVICES_SIT }}
          AWS_DEFAULT_REGION:      us-west-2
        run: |
          source bin/config.sh sit
          terraform apply -auto-approve


  deploy:
    name: Deploy
    needs: build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: 
      name: ${{ needs.build.outputs.deploy_env }}
      url: https://swodlr.podaac.${{ needs.build.outputs.deploy_env }}.earthdatacloud.nasa.gov/api/about
    if: |
      github.ref == 'refs/heads/develop' ||
      github.ref == 'refs/heads/main'    ||
      startsWith(github.ref, 'refs/heads/release') ||
      github.event_name == 'workflow_dispatch'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-session-name: GitHubActions
          aws-access-key-id: ${{ secrets[vars.AWS_ACCESS_KEY_ID_SECRET_NAME] }}
          aws-secret-access-key: ${{ secrets[vars.AWS_SECRET_ACCESS_KEY_SECRET_NAME] }}
          mask-aws-account-id: true
      - uses: actions/checkout@v3
        with:
          repository: ${{ github.repository }}
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - name: Deploy to venue
        id: terraform-deploy
        working-directory: terraform/
        env:
          AWS_DEFAULT_REGION: us-west-2
          TF_VAR_edl_base_url: ${{ secrets.EDL_BASE_URL }}
          TF_VAR_edl_client_id: ${{ secrets.EDL_CLIENT_ID }}
          TF_VAR_edl_client_secret: ${{ secrets.EDL_CLIENT_SECRET }}
          TF_VAR_session_encryption_key: ${{ secrets.SESSION_ENCRYPTION_KEY }}
          TF_VAR_ingest_aws_account: ${{ secrets.INGEST_AWS_ACCOUNT }}
          TF_VAR_ingest_aws_role: ${{ secrets.INGEST_AWS_ROLE }}
        run: |
          source bin/config.sh ${{ vars.TF_VENUE }}
          terraform apply -auto-approve